<Page xmlns:syncfusion="http://schemas.syncfusion.com/wpf" 
    xmlns:viewModel="clr-namespace:DBO.ViewModel;assembly=DBO.ViewModel" x:Class="DBO.View.ViewGroupsGoodsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
      xmlns:vdm="clr-namespace:DBO.ViewModel.ViewDataModel;assembly=DBO.ViewModel"
     xmlns:convert="clr-namespace:DBO.ViewModel.MVVMLib;assembly=DBO.ViewModel"
     mc:Ignorable="d" 
      d:DesignHeight="300" d:DesignWidth="700"
      Title="ViewGoodsPage">
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />

                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TreeView.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <x:Array x:Key="WindowCommandsOverlayBehaviorArray" Type="{x:Type controls:WindowCommandsOverlayBehavior}">
                <controls:WindowCommandsOverlayBehavior>Always</controls:WindowCommandsOverlayBehavior>
                <controls:WindowCommandsOverlayBehavior>Flyouts</controls:WindowCommandsOverlayBehavior>
                <controls:WindowCommandsOverlayBehavior>HiddenTitleBar</controls:WindowCommandsOverlayBehavior>
                <controls:WindowCommandsOverlayBehavior>Never</controls:WindowCommandsOverlayBehavior>
            </x:Array>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <convert:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
        </ResourceDictionary>



    </Page.Resources>

    <Page.DataContext>
        <viewModel:GoodsGroupsViewModel/>
    </Page.DataContext>

    <Grid>
        <Grid x:Name="g1"  >
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="280" />
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>


            <!--Кнопки управления группами товаров-->

            <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Stretch">
                <Button ToolTip="Редактировать выбраную группу." Width="30" Height="30" Margin="0 0 5 0" Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                    Command="{Binding LoadGroupCommand}">
                    <materialDesign:PackIcon Kind="TableEdit" />
                </Button>
                <ToggleButton x:Name="trExp" Content="H" Width="30" Height="30" Margin="0 0 5 0" Style="{StaticResource MaterialDesignActionToggleButton}"
                          ToolTip="MaterialDesignActionToggleButton" />
                <Button ToolTip="Добавить новую группу." Width="30" Height="30" Margin="0 0 5 0" Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                    Command="{Binding AddingGroupCommand}"  >
                    <materialDesign:PackIcon Kind="Plus" />
                </Button>
                <Button ToolTip="Удалить выбраную группу." Width="30" Height="30" Margin="0 0 5 0" Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                    Command="{Binding RemoveGroupCommand}" CommandParameter="{Binding SelectedItem, ElementName=groupsTreeView}" >
                    <materialDesign:PackIcon Kind="Delete" />
                </Button>
                <Button ToolTip="Редактировать выбраную группу." Width="30" Height="30" Margin="0 0 5 0" Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                    Command="{Binding EditingGroupCommand}" CommandParameter="{Binding SelectedItem, ElementName=groupsTreeView}">
                    <materialDesign:PackIcon Kind="TableEdit" />
                </Button>
            </StackPanel>


            <!--Busy indicator-->
            <Label HorizontalAlignment="Stretch" Grid.Column="0" Grid.Row="1"
                  VerticalAlignment="Stretch" Content="Loading..." Visibility="{Binding LoadGroupCommand.Execution.IsNotCompleted, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <!--Results-->
            <TreeView HorizontalAlignment="Stretch" Grid.Column="0" Grid.Row="1" 
                  VerticalAlignment="Stretch" x:Name="groupsTreeView" ItemsSource="{Binding GoodsGroupeCollection}" 
                      Visibility="{Binding LoadGroupCommand.IsSuccessfullyCompleted, Converter={StaticResource BooleanToVisibilityConverter}}"
                   Margin="5" ScrollViewer.VerticalScrollBarVisibility="Visible" >
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}" >
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                        <!--<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>-->
                    </Style>

                </TreeView.ItemContainerStyle>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectedItemChanged">
                        <i:InvokeCommandAction Command="{Binding SelectionChangedGroupCommand}"
                                   CommandParameter="{Binding SelectedItem, ElementName=groupsTreeView}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate DataType="{x:Type vdm:GroupVM}"  ItemsSource="{Binding ChildrenGroups}">
                        <TextBlock Text="{Binding Name}" />
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
            <GridSplitter Grid.Column="1" HorizontalAlignment="Left" Margin="0, 5"   VerticalAlignment="Stretch" Width="5" Grid.RowSpan="2"/>

            <!--Кнопки управления товароми-->
            <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Stretch">

                <Button ToolTip="Добавить новую группу." Width="30" Height="30" Margin="10 0 5 0" Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                    >
                    <materialDesign:PackIcon Kind="Plus" />
                </Button>
                <Button ToolTip="Удалить выбраную группу." Width="30" Height="30" Margin="0 0 5 0" Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                   >
                    <materialDesign:PackIcon Kind="Delete" />
                </Button>
                <Button ToolTip="Редактировать выбраную группу." Width="30" Height="30" Margin="0 0 5 0" Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                     >
                    <materialDesign:PackIcon Kind="TableEdit" />
                </Button>
            </StackPanel>


            <ListView SelectedItem="{Binding SelectedGood}" ItemsSource="{Binding GoodsCollection}" Grid.Column="1" Grid.Row="1" Margin="10, 5, 5, 5"  HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" ScrollViewer.VerticalScrollBarVisibility="Visible"  >
                <ListView.View>
                    <GridView>
                        <GridViewColumn Width="40" Header="Код" DisplayMemberBinding="{Binding Code}"  />
                        <GridViewColumn Width="200"  Header="Название">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox Width="180" Text="{Binding Name}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="60" Header="Цена">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox Width="55" Text="{Binding Price}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="40" Header="Код Группы" DisplayMemberBinding="{Binding GoodsGroupeId}"/>
                    </GridView>
                </ListView.View>
            </ListView>
        </Grid>
        <controls:Flyout x:Name="GroupFlyout" Margin="0 22 0 0" Theme="Accent" IsOpen="{Binding IsShowGroupFlayout}"
                         Header="Создание новой группы товаров." Position="Left" AnimateOpacity="True">
            <StackPanel>

                <TextBox Margin="10"  materialDesign:HintAssist.Hint="Название группы:" 
                 Style="{StaticResource MaterialDesignFloatingHintTextBox}" Text="{Binding CurentGroupe.Name}" />


                <ComboBox ItemsSource="{Binding ParenGroups}" DisplayMemberPath="NameForList"  SelectedItem="{Binding CurentGroupeParent}"
                    IsSynchronizedWithCurrentItem="True" Width="200" >
                </ComboBox>


                <Button Command="{Binding AddNewGroupCommand}" Visibility="{Binding IsAddingGroup, Converter={StaticResource BooleanToVisibilityConverter}}" >ADD</Button>
                <Button Command="{Binding UpdateGroupCommand}"  Visibility="{Binding IsEditingGroup, Converter={StaticResource BooleanToVisibilityConverter}}" >Save</Button>
            </StackPanel>
        </controls:Flyout>


        <controls:Flyout x:Name="GoodsFlyout" Margin="0 22 0 0" Theme="Accent"  IsOpen="False" Header="Einstellungen" Position="Right" Width="500" AnimateOpacity="True">
            <TextBlock  Width="100" Height="100" Text="Notifications" Foreground="White"/>

        </controls:Flyout>
    </Grid>
</Page>
