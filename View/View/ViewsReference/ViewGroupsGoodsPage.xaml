<Page x:Class="DBO.View.ViewGroupsGoodsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
     xmlns:convert="clr-namespace:DBO.View.ValueConverters"
     xmlns:viewModel1="clr-namespace:DBO.ViewModel"
     xmlns:vdm="clr-namespace:DBO.Model.DataModel"
     mc:Ignorable="d" 
      d:DesignHeight="300" d:DesignWidth="700"
      Title="ViewGoodsPage">
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />

                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TreeView.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <x:Array x:Key="WindowCommandsOverlayBehaviorArray" Type="{x:Type controls:WindowCommandsOverlayBehavior}">
                <controls:WindowCommandsOverlayBehavior>Always</controls:WindowCommandsOverlayBehavior>
                <controls:WindowCommandsOverlayBehavior>Flyouts</controls:WindowCommandsOverlayBehavior>
                <controls:WindowCommandsOverlayBehavior>HiddenTitleBar</controls:WindowCommandsOverlayBehavior>
                <controls:WindowCommandsOverlayBehavior>Never</controls:WindowCommandsOverlayBehavior>
            </x:Array>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <convert:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
            <convert:ComboBoxEmptyItemConverter  x:Key="ComboBoxEmptyItemConverter" />
            <convert:EnumerableNullReplaceConverter  x:Key="EnumerableNullReplaceConverter" />
            <convert:NullReplaceConverter  x:Key="NullReplaceConverter" />
        </ResourceDictionary>



    </Page.Resources>

    <Page.DataContext>
        <viewModel1:GoodsGroupsViewModel/>
    </Page.DataContext>

    <Grid>
        <Grid x:Name="g1"  >
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="280" />
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>


            <!--Кнопки управления группами товаров-->

            <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Stretch">
                <Button ToolTip="Редактировать выбраную группу." Width="30" Height="30" Margin="0 0 5 0" Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                    Command="{Binding LoadGroupCommand}">
                    <materialDesign:PackIcon Kind="TableEdit" />
                </Button>
                <ToggleButton x:Name="trExp" Content="H" Width="30" Height="30" Margin="0 0 5 0" Style="{StaticResource MaterialDesignActionToggleButton}"
                          ToolTip="MaterialDesignActionToggleButton" />
                <Button ToolTip="Добавить новую группу." Width="30" Height="30" Margin="0 0 5 0" Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                    Command="{Binding AddingGroupCommand}"  >
                    <materialDesign:PackIcon Kind="Plus" />
                </Button>
                <Button ToolTip="Удалить выбраную группу." Width="30" Height="30" Margin="0 0 5 0" Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                    Command="{Binding RemoveGroupCommand}" CommandParameter="{Binding SelectedItem, ElementName=groupsTreeView}" >
                    <materialDesign:PackIcon Kind="Delete" />
                </Button>
                <Button ToolTip="Редактировать выбраную группу." Width="30" Height="30" Margin="0 0 5 0" Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                    Command="{Binding EditingGroupCommand}" CommandParameter="{Binding SelectedItem, ElementName=groupsTreeView}">
                    <materialDesign:PackIcon Kind="TableEdit" />
                </Button>
            </StackPanel>


            <!--Busy indicator-->
            <Label HorizontalAlignment="Stretch" Grid.Column="0" Grid.Row="1"
                  VerticalAlignment="Stretch" Content="Loading..." Visibility="{Binding LoadGroupCommand.Execution.IsNotCompleted, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <!--Results-->
            <TreeView HorizontalAlignment="Stretch" Grid.Column="0" Grid.Row="1" 
                  VerticalAlignment="Stretch" x:Name="groupsTreeView" ItemsSource="{Binding GoodsGroupeCollection}" 
                      Visibility="{Binding LoadGroupCommand.IsSuccessfullyCompleted, Converter={StaticResource BooleanToVisibilityConverter}}"
                   Margin="5" ScrollViewer.VerticalScrollBarVisibility="Visible" >
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}" >
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                        <!--<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>-->
                    </Style>

                </TreeView.ItemContainerStyle>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectedItemChanged">
                        <i:InvokeCommandAction Command="{Binding SelectionChangedGroupCommand}"
                                   CommandParameter="{Binding SelectedItem, ElementName=groupsTreeView}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate DataType="{x:Type vdm:Group}"  ItemsSource="{Binding ChildrenGroups}">
                        <TextBlock Text="{Binding Name}" />
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
            <GridSplitter Grid.Column="1" HorizontalAlignment="Left" Margin="0, 5"   VerticalAlignment="Stretch" Width="5" Grid.RowSpan="2"/>

            <!--Кнопки управления товароми-->
            <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Stretch">

                <Button ToolTip="Добавить новую группу." Width="30" Height="30" Margin="10 0 5 0" Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                    >
                    <materialDesign:PackIcon Kind="Plus" />
                </Button>
                <Button ToolTip="Удалить выбраную группу." Width="30" Height="30" Margin="0 0 5 0" Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                   >
                    <materialDesign:PackIcon Kind="Delete" />
                </Button>
                <Button ToolTip="Редактировать выбраную группу." Width="30" Height="30" Margin="0 0 5 0" Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                     >
                    <materialDesign:PackIcon Kind="TableEdit" />
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</Page>
